name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        continue-on-error: false

      - name: Run ESLint
        run: npm run lint
        continue-on-error: false

      - name: Upload ESLint report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: eslint-report
          path: eslint_report.json
          if-no-files-found: ignore

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        continue-on-error: false

      - name: Run tests
        id: run-tests
        run: npm run test -- --ci --coverage
        continue-on-error: true

      - name: Upload test coverage
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/
          if-no-files-found: warn

      - name: Check test results
        if: steps.run-tests.outcome != 'success'
        run: |
          echo "::error::Tests failed! Check the test report for details."
          exit 1

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        continue-on-error: false
    
      - name: Build all apps and packages
        id: build
        run: |
          npm run build
          echo "::set-output name=status::success"
        continue-on-error: true
    
      - name: Archive build artifacts
        if: steps.build.outputs.status == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            apps/*/dist
            apps/*/.next
            packages/*/dist
    
      - name: Report build failure
        if: steps.build.outputs.status != 'success'
        run: |
          echo "::error::Build failed! Check the build logs for details."
          exit 1

  deploy:
    name: Deploy
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel
        id: deploy
        run: |
          # TODO: Replace with your actual Vercel token in repository secrets
          vercel deploy --prod --token="placeholder_vercel_token" || exit_code=$?
          if [ -n "$exit_code" ]; then
            echo "::error::Deployment failed with exit code $exit_code"
            exit 1
          fi
        env:
          # TODO: Add these credentials to your repository secrets
          VERCEL_PROJECT_ID: "placeholder_project_id"
          VERCEL_ORG_ID: "placeholder_org_id"

      - name: Notify on deployment status
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const scriptPath = require('path').resolve('.github/scripts/notify-deployment.js');
            require(scriptPath)({
              github,
              context,
              status: '${{ job.status }}',
              core,
            });

  accessibility-check:
    name: Accessibility Check
    needs: deploy
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run accessibility checks
        id: a11y-check
        run: npm run accessibility-check
        continue-on-error: true

      - name: Generate accessibility report
        if: always()
        run: npm run generate-a11y-report

      - name: Upload accessibility report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: accessibility-report
          path: accessibility-report/
          if-no-files-found: warn

      - name: Check accessibility result
        if: steps.a11y-check.outcome == 'failure'
        run: |
          echo "::warning::Accessibility checks found issues. See the report for details."

  performance-check:
    name: Performance Check
    needs: deploy
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Lighthouse CI
        id: lighthouse
        run: npm run lighthouse
        continue-on-error: true

      - name: Upload Lighthouse report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: lighthouse/
          if-no-files-found: warn
      
      - name: Check performance result
        if: steps.lighthouse.outcome == 'failure'
        run: |
          echo "::warning::Performance checks found issues. See the Lighthouse report for details."

  notify:
    name: Notification
    needs: [deploy, accessibility-check, performance-check]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Send status notification
        uses: actions/github-script@v6
        with:
          script: |
            const deployStatus = '${{ needs.deploy.result }}';
            const a11yStatus = '${{ needs.accessibility-check.result }}';
            const perfStatus = '${{ needs.performance-check.result }}';
            
            let summary = '## Deployment Summary\n\n';
            summary += `- **Deployment**: ${deployStatus === 'success' ? '✅ Success' : '❌ Failed'}\n`;
            summary += `- **Accessibility**: ${a11yStatus === 'success' ? '✅ Passed' : a11yStatus === 'failure' ? '⚠️ Issues found' : '⚠️ Check skipped'}\n`;
            summary += `- **Performance**: ${perfStatus === 'success' ? '✅ Passed' : perfStatus === 'failure' ? '⚠️ Issues found' : '⚠️ Check skipped'}\n\n`;
            summary += 'Check the artifacts for detailed reports.';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            }); 