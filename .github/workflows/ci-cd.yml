name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: 18
  SITE_URL: https://gdevelopers.com

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/
          retention-days: 7

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: .vercel/output/
          retention-days: 1

  accessibility:
    name: Accessibility Check
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run accessibility tests
        run: npm run test:accessibility

      - name: Upload accessibility report
        uses: actions/upload-artifact@v3
        with:
          name: accessibility-report
          path: accessibility-report/
          retention-days: 7

  lighthouse:
    name: Lighthouse Check
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.11.x
          lhci autorun
        env:
          LHCI_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Lighthouse report
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: .lighthouseci/
          retention-days: 7

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [build, accessibility, lighthouse]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .vercel/output/

      - name: Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v25
        with:
          # TODO: Replace these placeholder values with your actual Vercel credentials
          vercel-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: "placeholder_org_id"
          vercel-project-id: "placeholder_project_id"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: true
          working-directory: .

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: .vercel/output/

      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          # TODO: Replace these placeholder values with your actual Vercel credentials
          vercel-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: "placeholder_org_id"
          vercel-project-id: "placeholder_project_id"
          vercel-args: '--prod'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: .

      - name: Generate sitemap
        run: npm run postbuild

      - name: Ping search engines
        run: |
          curl -X GET "https://www.google.com/ping?sitemap=$SITE_URL/sitemap.xml"
          curl -X GET "https://www.bing.com/ping?sitemap=$SITE_URL/sitemap.xml"

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [deploy-production, deploy-preview]
    if: always()
    steps:
      - name: Notify on success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          # TODO: Add your actual Slack webhook URL to repository secrets
          SLACK_WEBHOOK: "https://hooks.slack.com/services/YOUR_WEBHOOK_HERE"
          SLACK_TITLE: "✅ Deployment Successful"
          SLACK_MESSAGE: "The GDevelopers Portal has been deployed successfully."
          SLACK_COLOR: good

      - name: Notify on failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          # TODO: Add your actual Slack webhook URL to repository secrets
          SLACK_WEBHOOK: "https://hooks.slack.com/services/YOUR_WEBHOOK_HERE"
          SLACK_TITLE: "❌ Deployment Failed"
          SLACK_MESSAGE: "The GDevelopers Portal deployment has failed."
          SLACK_COLOR: danger 